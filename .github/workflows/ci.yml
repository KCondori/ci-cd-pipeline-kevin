name: CI/CD Pipeline con Heroku & Slack üöÄ

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.x', '20.x', '22.x']
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Eliminar dependencias previas (opcional)
        run: rm -rf node_modules package-lock.json

      - name: Instalar dependencias
        run: npm install --legacy-peer-deps

      - name: Ejecutar pruebas
        run: npm test

      - name: Construir la app
        run: |
          mkdir -p docs
          echo "<h1>Build $(date)</h1>" > docs/index.html

      - name: Inyectar valores din√°micos
        run: |
          sed -i "s|const branch = \".*\";|const branch = \"${GITHUB_REF_NAME}\";|" docs/index.html
          sed -i "s|const commitSha = \".*\";|const commitSha = \"${GITHUB_SHA}\";|" docs/index.html
          sed -i "s|const repoUrl = \".*\";|const repoUrl = \"https://github.com/${GITHUB_REPOSITORY}\";|" docs/index.html

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
           name: docs-${{ matrix.node-version }}
           path: docs

      - name: Descargar todos los artifacts de docs
        uses: actions/download-artifact@v4
        with:
          pattern: docs-*
          merge-multiple: true
          path: docs

  deploy:
    name: Deploy a Heroku
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && success()
    steps:
      - uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
           pattern: docs-*
           merge-multiple: true
           path: docs

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Add Heroku git remote
        run: |
          git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git

      - name: Deploy a Heroku
        uses: akhileshns/heroku-deploy@v3.14.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: false

  notify:
    name: Notificar en Slack
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Enviar notificaci√≥n Slack
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          custom_payload: |
            {
              "text": ${{ job.status == 'success' && '‚úÖ Pipeline exitoso üéâ' || '‚ùå Pipeline fallido' }}
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  create-issue:
    name: Crear Issue si falla el deploy
    needs: deploy
    if: failure()
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write

    steps:
      - name: Crear contenido del issue
        run: |
          cat <<EOF > issue.md
          ## üö® Despliegue fallido en main

          - **Repositorio:** ${{ github.repository }}
          - **Commit:** ${{ github.sha }}
          - **Branch:** ${{ github.ref_name }}

          _Autom√°ticamente generado por CI/CD._
          EOF

      - name: Crear issue desde archivo
        uses: peter-evans/create-issue-from-file@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "üö® Despliegue fallido en la rama main"
          content-filepath: issue.md
          labels: |
            bug
            deployment-failure
